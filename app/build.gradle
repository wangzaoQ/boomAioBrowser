plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'stringfog'
    id 'com.google.gms.google-services'
//    id 'com.google.firebase.crashlytics'

}
android {
    namespace 'com.boom.aiobrowser'
    compileSdk 34

    defaultConfig {
        applicationId "com.boom.aiobrowser"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        setProperty("archivesBaseName", "AioBrowser_${new Date().format("yyyy_MMdd_HHmm_ss", TimeZone.getDefault())}-v${versionName}-${defaultConfig.applicationId}")

    }



    signingConfigs {
        debug {
            v2SigningEnabled true
            storeFile file("test_aio")
            storePassword "1234567"
            keyAlias "test_aio"
            keyPassword "1234567"
        }

        release {
            storeFile file("test_aio")
            storePassword "1234567"
            keyAlias "test_aio"
            keyPassword "1234567"
        }

    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            signingConfig signingConfigs.release
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            debuggable true
//            minifyEnabled true
//            signingConfig signingConfigs.release
//            shrinkResources true
//            zipAlignEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }

    buildFeatures {
        buildConfig true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        jniLibs.useLegacyPackaging = true
    }
    flavorDimensions "versionCode"

}


stringfog {
    // 必要：加解密库的实现类路径，需和上面配置的加解密算法库一致。
    implementation 'com.github.megatronking.stringfog.xor.StringFogImpl'
    // 可选：加密开关，默认开启。
    enable true
    // 可选：指定需加密的代码包路径，可配置多个，未指定将默认全部加密。
    fogPackages = ['com.boom.aiobrowser', 'pop','com.boom.web','com.boom.video','com.boom.videocache',"com.boom.downloader"]
    // 可选（3.0版本新增）：指定密钥生成器，默认使用长度8的随机密钥（每个字符串均有不同随机密钥）,
    // 也可以指定一个固定的密钥：HardCodeKeyGenerator("This is a key")
//        kg new RandomKeyGenerator()
    // 可选（4.0版本新增）：用于控制字符串加密后在字节码中的存在形式, 默认为base64，
    // 也可以使用text或者bytes
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.squareup.okhttp3') {
            if ("okhttp" == requested.name) {
                details.useVersion "4.10.0"
            }
        }
        if (requested.group == 'recyclerview') {
            if ("recyclerview" == requested.name) {
                details.useVersion "1.3.2"
            }
        }
        if (requested.group == 'core') {
            if ("core" == requested.name) {
                details.useVersion "1.8.1"
            }
        }
    }
}

dependencies {
    implementation project(':adapter')
    implementation project(':pop')
    implementation project(':web')
    implementation project(':videoDownload')
    implementation project(':dragpop')
    implementation project(':gsyVideoPlayer-java')
    implementation project(':gsyVideoPlayer-exo_player2')
    implementation 'com.github.zhpanvip:viewpagerindicator:1.2.3'

//    implementation project(':download')
//    implementation project(':indicator')
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.annotation:annotation:1.8.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'com.github.getActivity:XXPermissions:18.2'
    implementation 'com.github.megatronking.stringfog:xor:4.0.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.15.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.airbnb.android:lottie:5.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    api 'com.github.chrisbanes:PhotoView:2.3.0'
//    implementation 'com.github.zhpanvip:viewpagerindicator:1.2.3'

    // 通用工具类
    api('com.blankj:utilcodex:1.31.0')
            {
                exclude group: 'androidx.appcompat'
            }
    implementation 'com.tencent:mmkv:1.3.9'
//    implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper4:4.1.4"
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation("androidx.webkit:webkit:1.9.0")

    // worker manager
    implementation "androidx.work:work-runtime-ktx:2.7.1"


    def room_version = "2.6.1"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"


    implementation 'org.jsoup:jsoup:1.18.1'

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'


    //admob
    implementation("com.google.android.gms:play-services-ads:23.3.0")
    implementation("com.google.ads.mediation:pangle:6.1.0.9.0")
    implementation("com.google.ads.mediation:applovin:13.0.0.0")
    implementation("com.google.ads.mediation:facebook:6.18.0.0")
    implementation("com.google.ads.mediation:mintegral:16.8.61.0")



    //google
    implementation(platform("com.google.firebase:firebase-bom:33.1.2"))
    implementation("com.google.firebase:firebase-config-ktx")
    implementation("com.google.firebase:firebase-analytics-ktx")
    implementation 'com.android.installreferrer:installreferrer:2.2'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.3.1'
    implementation 'com.google.firebase:firebase-messaging-directboot:20.2.0'
    implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
    implementation 'com.google.android.gms:play-services-appset:16.0.2'
//    implementation("com.google.firebase:firebase-crashlytics-ktx")
    // === 应用评分 start
    // This dependency is downloaded from the Google’s Maven repository.
    // Make sure you also include that repository in your project's build.gradle file.
    implementation("com.google.android.play:review:2.0.1")
    // For Kotlin users, also import the Kotlin extensions library for Play In-App Review:
    implementation("com.google.android.play:review-ktx:2.0.1")

    implementation 'com.facebook.android:facebook-android-sdk:12.3.0'
    implementation 'com.adjust.sdk:adjust-android:4.33.5'

}


kapt {
    arguments {
        arg("room.schemaLocation", "$projectDir/schemas".toString())
    }
}
